name: petclinic-k8s
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY_NAME: kanthreg
  CLUSTER_NAME: sri-aks
  CLUSTER_RESOURCE_GROUP: sri-aks
  NAMESPACE: default
  JAVA_VERSION: '1.8'

jobs:
  Container_Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2    
    
    # Connect to Azure Container registry (ACR)
    - name: Docker login
      uses: azure/docker-login@v1
      with:
        login-server: kanthreg.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
       
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}

    - name: Build with Maven
      run: mvn package --file pom.xml

    - name: Container build
      run: |
        docker build -f $GITHUB_WORKSPACE/Dockerfile -t ${{ secrets.ACR }}/petclinic:${{ github.run_number }} .
    
    - name: Container push to a Azure Container registry (ACR)
      run: |
        docker push ${{ secrets.ACR }}/petclinic:${{ github.run_number }}	
#-------------------------
  AKS_deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: Container_Build
    steps:
    - name: Checkout
      uses: actions/checkout@v2   
    
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}    
    
    # Connect to Azure Container registry (ACR)
    - uses: azure/docker-login@v1
      name: Docker login
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}    
    # Set the target Azure Kubernetes Service (AKS) cluster 
    - uses: azure/aks-set-context@v1
      name: Set the target AKS cluster
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
    # Create namespace if doesn't exist
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
      name: Create namespace if doesn't exist
    
    # Create imagepullsecret for Azure Container registry (ACR)
    - uses: azure/k8s-create-secret@v1
      name: Create imagepullsecret for ACR
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: ${{ env.REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}
    
    # Deploy app to AKS
    - uses: azure/k8s-deploy@v1
      name: Deploy app to AKS
      with:
        manifests: |
          deployment.yaml
        images: |
          ${{ secrets.ACR }}/petclinic:${{ github.run_number }}
        imagepullsecrets: |
          ${{ env.REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}  
