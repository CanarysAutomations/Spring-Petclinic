name: gitpack.Docker
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  JAVA_VERSION: '1.8'
  CLUSTER_NAME: sri-aks
  CLUSTER_RESOURCE_GROUP: sri-aks
  NAMESPACE: default
jobs:
  BUILD:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      name: checkout
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}
    - name: Build with Maven
      run: mvn package --file pom.xml
    - name: docker login to github packages
      run: |
        docker login docker.pkg.github.com -u srikanth-pusarla -p ${{ secrets.GITHUB_TOKEN }}
    - name: build and tag image
      run: |
        docker build -f ./Dockerfile -t spring-petclinic:${{ github.run_number }} .
        docker tag spring-petclinic:${{ github.run_number }} docker.pkg.github.com/canarysplayground/spring-petclinic/petclinic:${{ github.run_number }}
    - name: scan image
      uses: Azure/container-scan@v0
      with:
        image-name: docker.pkg.github.com/canarysplayground/spring-petclinic/petclinic:${{ github.run_number }}
        severity-threshold: CRITICAL
    - name: push image
      run: |
        docker push docker.pkg.github.com/canarysplayground/spring-petclinic/petclinic:${{ github.run_number }}
#-------------------------
  AKS_gitpack_deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: BUILD
    steps:
    - name: Checkout
      uses: actions/checkout@v2   
    
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}    
    
    # Connect to github packages
    - name: docker login to github packages
      run: |
        docker login docker.pkg.github.com -u srikanth-pusarla -p ${{ secrets.GITHUB_TOKEN }}    
    # Set the target Azure Kubernetes Service (AKS) cluster 
    - uses: azure/aks-set-context@v1
      name: Set the target AKS cluster
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
    # Create namespace if doesn't exist
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
      name: Create namespace if doesn't exist
    
    # Create imagepullsecret for Azure Container registry (ACR)
    - uses: azure/k8s-create-secret@v1
      name: Create imagepullsecret for ACR
      with:
        container-registry-url: docker.pkg.github.com
        container-registry-username: srikanth-pusarla
        container-registry-password: ${{ secrets.GITHUB_TOKEN }}
        secret-name: sri-registry-connection
        namespace: ${{ env.NAMESPACE }}
    
    # Deploy app to AKS
    - uses: azure/k8s-deploy@v1
      name: Deploy app to AKS
      with:
        manifests: |
          git-pack-deployment.yaml
        images: |
          docker.pkg.github.com/canarysplayground/spring-petclinic/petclinic:${{ github.run_number }}
        imagepullsecrets: |
          sri-registry-connection
        namespace: ${{ env.NAMESPACE }}  
